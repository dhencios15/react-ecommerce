{"ast":null,"code":"var _jsxFileName = \"D:\\\\GITHUB\\\\react-ecommerce\\\\client\\\\src\\\\components\\\\SignUp\\\\SignUp.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport './SignUp.style.scss';\nimport schema from '../../helpers/Input-Validation';\nimport { signUpStart } from '../../redux/user/userActions';\nimport FormInput from '../FormInput';\nimport CustomButton from '../CustomButton';\n\nconst SignUp = () => {\n  var _errors$displayName, _errors$email, _errors$password, _errors$confirmPasswo;\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema.SignUpSchema),\n    mode: 'onBlur'\n  });\n\n  const onSubmit = async (data, e) => {\n    const {\n      email,\n      password,\n      displayName,\n      confirmPassword\n    } = data;\n    if (password !== confirmPassword) return console.log('MALI');\n    dispatch(signUpStart({\n      email,\n      password,\n      displayName\n    }));\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    register: register,\n    label: \"Display Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, (_errors$displayName = errors.displayName) === null || _errors$displayName === void 0 ? void 0 : _errors$displayName.message), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    register: register,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    register: register,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    register: register,\n    label: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \" SIGN UP \"))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["D:/GITHUB/react-ecommerce/client/src/components/SignUp/SignUp.js"],"names":["React","useDispatch","useForm","yupResolver","schema","signUpStart","FormInput","CustomButton","SignUp","dispatch","register","handleSubmit","errors","resolver","SignUpSchema","mode","onSubmit","data","e","email","password","displayName","confirmPassword","console","log","target","reset","color","message"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nimport './SignUp.style.scss';\r\nimport schema from '../../helpers/Input-Validation';\r\nimport { signUpStart } from '../../redux/user/userActions';\r\n\r\nimport FormInput from '../FormInput';\r\nimport CustomButton from '../CustomButton';\r\n\r\nconst SignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema.SignUpSchema),\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const onSubmit = async (data, e) => {\r\n    const { email, password, displayName, confirmPassword } = data;\r\n    if (password !== confirmPassword) return console.log('MALI');\r\n    dispatch(signUpStart({ email, password, displayName }));\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <h2>I do not have a account</h2>\r\n      <span>Sign up with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormInput\r\n          name='displayName'\r\n          type='text'\r\n          register={register}\r\n          label='Display Name'\r\n        />\r\n        <p style={{ color: 'red' }}>{errors.displayName?.message}</p>\r\n\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          register={register}\r\n          label='Email'\r\n        />\r\n        <p style={{ color: 'red' }}>{errors.email?.message}</p>\r\n\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          register={register}\r\n          label='Password'\r\n        />\r\n        <p style={{ color: 'red' }}>{errors.password?.message}</p>\r\n        <FormInput\r\n          name='confirmPassword'\r\n          type='password'\r\n          register={register}\r\n          label='Confirm Password'\r\n        />\r\n        <p style={{ color: 'red' }}>{errors.confirmPassword?.message}</p>\r\n\r\n        <div className='buttons'>\r\n          <CustomButton type='submit'> SIGN UP </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}